{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Exercise 1","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"0-NxWLDRSRvB"},"source":["1) Given the list `[5,3,4+1j,0.35]` and `[1,4,-j,2*5,-0.453]`\n","\n","-Find the sum of the first position of the first list and the third last position of the second list. Then append the value to an empty list called `c`.\n","\n"]},{"cell_type":"code","metadata":{"id":"HiyvW1_wWk2-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639663245023,"user_tz":-480,"elapsed":8,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"a67a0eb8-75f5-4136-e1c3-7f90c4ba27fb"},"source":["a= [5,3,4+1j,0.35]\n","b= [1,4,-1j,2*5,-0.453]\n","c=[]\n","value=a[0]+b[-3]\n","c.append(value)\n","print(c)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(5-1j)]\n"]}]},{"cell_type":"markdown","metadata":{"id":"YzzI-WbVWlUO"},"source":["2) Create a Python code that takes two initial values, and generate a Fibonacci sequence."]},{"cell_type":"code","metadata":{"id":"H7XgwuiDW2hW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639663422538,"user_tz":-480,"elapsed":332,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"8ea110fe-c86c-42ff-c842-310654945a9d"},"source":["a=1\n","b=1\n","\n","print(a)\n","print(b)\n","while a<100:\n","  c=a+b\n","  print(c)\n","  a=b\n","  b=c"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","1\n","2\n","3\n","5\n","8\n","13\n","21\n","34\n","55\n","89\n","144\n","233\n"]}]},{"cell_type":"markdown","metadata":{"id":"uXZlkh1FW21m"},"source":["3) Create a Python code that finds prime numbers up to a certain integer. If you can't write the codes directly, come up with an algorithm (flowchart) to help you visualise the flow."]},{"cell_type":"code","metadata":{"id":"xUY0peA6XO83","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1640095360534,"user_tz":-480,"elapsed":308,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"151fe235-44e9-4a0f-a980-d792b2ceb835"},"source":["import numpy as np\n","def find_prime(n=100):\n","  numbers=np.arange(2,n+1,1)\n","  primes=[2]\n","  for i in numbers:\n","    test=[i%k for k in primes]\n","    if all(test)!=0: #see if all the remainder is NOT equal to 0\n","      primes.append(i) #i is prime if statement in line 7 is true\n","  return primes\n","\n","print(find_prime(1000))"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n"]}]},{"cell_type":"markdown","metadata":{"id":"jXrU3gEjXPb_"},"source":["4) Generate a sequence that increases by 4 at every term, except every 3rd term where it multiplies by 2. Print the sequence until the values hits above 200."]},{"cell_type":"code","metadata":{"id":"rmKKiXPsbXsB"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NAGWWmvTZKJ6"},"source":["5) Given that $n(i)=2i+3$\n","Find the sum of $n(0)+n(1)+n(2)+...+n(30)$"]},{"cell_type":"code","metadata":{"id":"eqHFWXJyYepw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639663686370,"user_tz":-480,"elapsed":371,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"48576083-2e91-48a1-f1e2-be033cde8bdf"},"source":["import numpy as np\n","\n","a=np.arange(0,31,1) #start, end, step size\n","\n","n=[2*i+3 for i in a]\n","print(n)\n","sum_of_n=sum(n)\n","print(sum_of_n)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63]\n","1023\n"]}]},{"cell_type":"markdown","metadata":{"id":"5IhapNzpYoo6"},"source":["6) Write a Python program to calculate the Coulomb force between two charges, given its charge and position."]},{"cell_type":"code","metadata":{"id":"o6bGd7aOZqpX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1640094576493,"user_tz":-480,"elapsed":328,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"ae50d35f-574a-439c-b8c5-bf3ce81f7ca7"},"source":["import numpy as np\n","\n","def F_Coulomb(q1,q2,x1,y1,x2,y2):\n","  k=8.987e9\n","  r=np.sqrt((x2-x1)**2+(y2-y1)**2)\n","  F=k*q1*q2/r**2\n","  return print(F,\"N\")\n","\n","F_Coulomb(-3,2,0,1,-3,-5)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["-1198266666.6666665 N\n"]}]}]}