{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Chapter 1b: Lists","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"lBzi4ipsnIFf"},"source":["**Creating a list**\n","\n","List is just a way we can arrange a set of data. The objects in the list are called elements, and its position is called the index. A list can be defined using the ```[]``` brackets. You can add different types of data in the same list. Heck, you can even write a list inside a list!"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U6SntPMLquSf","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639490379540,"user_tz":-480,"elapsed":4,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"1b629e88-1fb3-447f-e8d0-4518f6f6f7ef"},"source":["a=[1,4,5]\n","\n","print(a)\n","\n","b=[\"I'm a number.\",3+4j,69.01]\n","print(type(b[0]))\n","\n","c=[[1,2],[3,1],[\"seven\",5]]\n","print(c)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 4, 5]\n","<class 'str'>\n","[[1, 2], [3, 1], ['seven', 5]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"XGmYYnMiqsWa"},"source":["**Index (position) on the list**\n","\n","In a list, we start counting the first element from the left as 0.\n","\n","When we count elements from right-to-left i.e. last to first, the most right position has an index of -1 followed by -2, -3 and so on.\n","\n","Given a list named `A`, we can pick out a data by inputting its `index` (position) as `A[index]`. We can also find the index, given its `value` using `A.index(value)`"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HVJbLadImswZ","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639490608082,"user_tz":-480,"elapsed":389,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"d7e49d5e-0434-47f2-9ab3-6c4595dea980"},"source":["b=[-1,3.45,\"I'm a number\",6+9j]\n","print(b)\n","\n","print(\"b[0] is\",b[0])\n","print(\"b[1] is\",b[1])\n","print(\"b[-1] is\", b[-1])\n","print(\"b[0]+b[1] is\",b[0]+b[1])\n","print(2*b[-1])\n","print(\"The index of data 3.45 is\", b.index(3.45))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-1, 3.45, \"I'm a number\", (6+9j)]\n","b[0] is -1\n","b[1] is 3.45\n","b[-1] is (6+9j)\n","b[0]+b[1] is 2.45\n","(12+18j)\n","The index of data 3.45 is 1\n"]}]},{"cell_type":"markdown","metadata":{"id":"5n3LB00QtqD1"},"source":["**Length of a list**\n","\n","Use len() to find the length of a list i.e. the no. of elements in the list."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vyqsdZcpt0rX","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639490762615,"user_tz":-480,"elapsed":385,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"b193ed2e-266b-4ff0-9de4-df6d8b4672e8"},"source":["a=[3,4,5,\"400\",[1,2],[3,[4,5]]]\n","\n","length=len(a)\n","print(length)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n"]}]},{"cell_type":"markdown","metadata":{"id":"mNatuA9CtzhB"},"source":["**Appending a new element into a list**\n","\n","Given a list `a` and a variable `b`, we can append the value of `b` in list `a` using the command `a.append(b)`. The value will be added to the end of the list.\n","\n","To add a value at a specific index we use `list.insert(index, element)`. The resulting list will have that element at the index specified by in the input."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0EjjTe8yLnJ","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639490910428,"user_tz":-480,"elapsed":552,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"944d4f24-ea30-4c2a-e84f-2ea8d0b6d6e6"},"source":["C=[6,8,9,11,12]\n","C.append(13)\n","print(C)\n","C.insert(1,7) #the value 7 will be at index 1 i.e. 2nd position\n","print(C)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[6, 8, 9, 11, 12, 13]\n","[6, 7, 8, 9, 11, 12, 13]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Y672xtUzzbIw"},"source":["**Deleting an element from a list**\n","\n","Use the command `list.remove(value)` to remove the **first element that has the same value** as `value` in the list. \n","\n","Note: We will learn how to remove all elements that have the same value in the next chapter.\n","\n","To remove an element based on index, use `del list[index]`"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E8LXVm-M0KES","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639491028536,"user_tz":-480,"elapsed":387,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"03c80034-d58e-41dd-9141-8013426a2a37"},"source":["numbers_only=[1,2,3,\"am i a number\",4,5,\"am i a number\",6,7]\n","\n","numbers_only.remove(\"am i a number\")\n","print(numbers_only)\n","\n","del numbers_only[1] #remove the element with index 1 i.e. 2nd position\n","print(numbers_only)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3, 4, 5, 'am i a number', 6, 7]\n","[1, 3, 4, 5, 'am i a number', 6, 7]\n"]}]},{"cell_type":"markdown","metadata":{"id":"0-aZNedg6duy"},"source":["**List comprehension**\n","You can use semicolon `:` to extract a range of elements in the list.\n","\n","* ```a[2:]```: extract elements from index 2 until the end of the list.\n","* ```a[:2]```: extract elements from the first until element before index 2\n","* ```a[4:7]```: extract elements from index 4 until element before index 7"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UeqkJUV87mig","collapsed":true,"executionInfo":{"status":"ok","timestamp":1639491199161,"user_tz":-480,"elapsed":467,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"4e85838c-7c4e-4425-f588-e5419122d7c1"},"source":["a=[56,68,124,231,432,7213,8321]\n","print(a[3:])\n","print(a[:4])\n","print(a[3:5])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[231, 432, 7213, 8321]\n","[56, 68, 124, 231]\n","[231, 432]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Q_VTT8FLWvlP"},"source":["**Creating list using numpy libraries**\n","\n","We can generate a certain type of list using `numpy` where the values have evenly-spaced intervals.\n","\n","There are two functions in the library:\n","* `np.arange(start,end,interval size)`\n","* `np.linspace(start,end,no of data points including start and end)`\n","\n","Reference: [numpy.arange](https://numpy.org/doc/stable/reference/generated/numpy.arange.html) and [numpy.linspace](https://numpy.org/doc/stable/reference/generated/numpy.linspace.html#numpy.linspace)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"e51w10TiYLkF","executionInfo":{"status":"ok","timestamp":1639491679248,"user_tz":-480,"elapsed":375,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"41dbcd75-49ba-49bb-ce50-e759db9796e8"},"source":["import numpy as np\n","\n","a1=np.arange(0, 10, 1)\n","print(\"a1:\",a1)\n","\n","a2=np.arange(0, 10.1, 1)\n","print(\"a2:\",a2)\n","\n","c=np.linspace(0,10,11)\n","print(c)\n","print(\"Length of c is\",len(c))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a1: [0 1 2 3 4 5 6 7 8 9]\n","a2: [ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]\n","[ 0.          0.1010101   0.2020202   0.3030303   0.4040404   0.50505051\n","  0.60606061  0.70707071  0.80808081  0.90909091  1.01010101  1.11111111\n","  1.21212121  1.31313131  1.41414141  1.51515152  1.61616162  1.71717172\n","  1.81818182  1.91919192  2.02020202  2.12121212  2.22222222  2.32323232\n","  2.42424242  2.52525253  2.62626263  2.72727273  2.82828283  2.92929293\n","  3.03030303  3.13131313  3.23232323  3.33333333  3.43434343  3.53535354\n","  3.63636364  3.73737374  3.83838384  3.93939394  4.04040404  4.14141414\n","  4.24242424  4.34343434  4.44444444  4.54545455  4.64646465  4.74747475\n","  4.84848485  4.94949495  5.05050505  5.15151515  5.25252525  5.35353535\n","  5.45454545  5.55555556  5.65656566  5.75757576  5.85858586  5.95959596\n","  6.06060606  6.16161616  6.26262626  6.36363636  6.46464646  6.56565657\n","  6.66666667  6.76767677  6.86868687  6.96969697  7.07070707  7.17171717\n","  7.27272727  7.37373737  7.47474747  7.57575758  7.67676768  7.77777778\n","  7.87878788  7.97979798  8.08080808  8.18181818  8.28282828  8.38383838\n","  8.48484848  8.58585859  8.68686869  8.78787879  8.88888889  8.98989899\n","  9.09090909  9.19191919  9.29292929  9.39393939  9.49494949  9.5959596\n","  9.6969697   9.7979798   9.8989899  10.        ]\n","Length of c is 100\n"]}]}]}