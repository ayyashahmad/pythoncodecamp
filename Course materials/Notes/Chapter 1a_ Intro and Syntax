{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMndYtS2ND7vOxWSJmvKh1m"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"QPg5584hZfCd"},"source":["**Assigning variables and print function**\n","\n","Use `=` to assigning values to a variable\n","\n","Use ```print()``` to print the values of a variable. Insert the variable in the bracket."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ziIHg8sHZczg","executionInfo":{"status":"ok","timestamp":1639487909750,"user_tz":-480,"elapsed":358,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"295f93e7-6577-49e5-856c-5334ac3b0747"},"source":["a=69\n","b=\"Hello, guys!\"\n","c=\"My stress level out of 70 is\"\n","\n","print(a)\n","print(b)\n","print(c,a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["69\n","Hello, guys!\n","My stress level out of 70 is 69\n"]}]},{"cell_type":"markdown","metadata":{"id":"va3cqUkYa9Sj"},"source":["**Types of data**\n","\n","There are 4 types of data\n","\n","1.   Integers (as `int`)\n","2.   Floating numbers i.e. numbers with a finite no. of decimal places (as `float`)\n","3.   Complex numbers (`complex`)\n","3.   Text/string (as `str`)\n","\n","To check the type of a data, use ```type()``` function."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SIwvsvp_dbbg","executionInfo":{"status":"ok","timestamp":1666845201124,"user_tz":-480,"elapsed":8,"user":{"displayName":"Ayyash Ahmad","userId":"17632978179708866392"}},"outputId":"fbd3ba79-f070-4736-b922-e0bf9e4b954b"},"source":["a=5\n","b=3.4551\n","c=5+7j\n","d=\"3+6=21\"\n","\n","print(type(a))\n","print(type(b))\n","print(type(c))\n","print(type(d))"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'int'>\n","<class 'float'>\n","<class 'complex'>\n","<class 'str'>\n"]}]},{"cell_type":"markdown","metadata":{"id":"3_zA1TTuekre"},"source":["**Commenting with #**\n","\n","Use ```#``` to comment your codes. You can also turn a code line on/off by adding ```#``` at the beginning of a line."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QE0BBHtqct64","executionInfo":{"status":"ok","timestamp":1639488226103,"user_tz":-480,"elapsed":333,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"a92c7e35-0a3d-4129-cea6-9e9d56066f3a"},"source":["r=5 #radius of a circle\n","pi=3.142 #value of pie\n","print(pi)\n","area=pi*r**2 #area of a circle\n","print(area)\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3.142\n","78.55\n"]}]},{"cell_type":"markdown","metadata":{"id":"5Iydgy9Mfm6p"},"source":["**PEMDAS and other math operations**\n","* `+` addition\n","* `-` subtraction\n","* `*` multiply\n","* `/` divide\n","* `%` mod operation (`3 % 2` is 3 mod 2)\n","* `**` power and exponential (`2**3` is $2^3$)\n","* `==` equality\n","* `!=` inequality\n","* `>` greater than\n","* `<` less than\n","* `>=` greater/equal to\n","* `<=` smaller/equal to\n","\n","Python generally follows PEMDAS rule to define the order of operations. You can use `()` brackets to control which operations to do first."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NHO_w_HCftbX","executionInfo":{"status":"ok","timestamp":1639488546712,"user_tz":-480,"elapsed":356,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"cd611de0-52c7-4c45-be8c-5a774e6572ab"},"source":["a=3*2+3**2/3\n","print(a)\n","\n","a=3*(2+3**2)/3\n","print(a)\n","\n","b=5**2\n","print(b)\n","\n","if 3>2:\n","  print(\"3 is bigger.\")\n","\n","d=3\n","if d==6:\n","  print(d)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["9.0\n","11.0\n","25\n","3 is bigger.\n"]}]},{"cell_type":"markdown","metadata":{"id":"CcBtwl-hhjLa"},"source":["**Reassigning the variables**\n","\n","The value of a variable can be reassigned to different value by simply redefining it again on a newer line."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b3ePYOFxiSid","executionInfo":{"status":"ok","timestamp":1639488592804,"user_tz":-480,"elapsed":343,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"9c8a4fef-520f-4553-d740-bc88f4f83fdf"},"source":["a=5\n","print(\"The value of a is\",a)\n","a=10\n","print(\"The value of a now is\",a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The value of a is 5\n","The value of a now is 10\n"]}]},{"cell_type":"markdown","metadata":{"id":"bNp75JOCi6R8"},"source":["**Importing libraries**\n","\n","Libraries are groups of functions in Python that we can use in our coding.\n","\n","Most often-used libraries:\n","* ```numpy``` (math library)\n","* ```math``` (math library)\n","* ```scipy``` (algorithm library for optimisation, diff. eqns., statistics etc.)\n","* ```matplotlib``` (plotting library)\n","\n","We use the ```import``` command to import libraries as follows:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":319},"id":"z91mdFQ2kDyy","executionInfo":{"status":"ok","timestamp":1639488991863,"user_tz":-480,"elapsed":407,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"45263a2f-3075-43b9-ff48-579470d80633"},"source":["#@title\n","import numpy as np\n","import scipy as sp\n","import matplotlib.pyplot as plt #this imports pyplot libraries in matplotlib\n","\n","pie = np.pi #this function calls the value of pi\n","print(pie)\n","\n","b = np.cos(np.pi/3) #this function calls the function of cos with input in radians\n","print(b)\n","\n","plt.plot([0,1,0,7,10]) #this function calls the plotting tools in matplotlib"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3.141592653589793\n","0.5000000000000001\n"]},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f63776ed590>]"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}