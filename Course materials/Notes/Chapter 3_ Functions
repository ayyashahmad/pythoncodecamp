{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Chapter 3: Functions","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyP7HmH2Hm0sNrlceS2u1K3n"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"p1ZD_KeZwnrJ"},"source":["**Defining a function**\n","\n","A function is an operation that takes an input (or several inputs), operates on it and spits out an output (or several outputs). In Python we can define a function named `f` using the command `def f():` where the parameters are defined inside the () brackets.\n","\n","Some nomenclatures...\n","\n","parameter: the inputs we define in the function\n","\n","argument: the values of the parameters we use when we call the function.\n","\n","But in most contexts, the two terms are used interchangeably.\n","\n","To define the output, we use `return` at the end of the function."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2rbqOAupwjVp","collapsed":true,"executionInfo":{"status":"ok","timestamp":1640093089582,"user_tz":-480,"elapsed":313,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"1ee9eb08-5673-454c-8ad5-74a6038dc344"},"source":["def f(x):\n","  y=x+1\n","  return y\n","\n","def sum(x,y):\n","  return x+y\n","\n","print(f(1))\n","print(f(5))\n","print(sum(3,5))"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","6\n","8\n"]}]},{"cell_type":"markdown","metadata":{"id":"yMGj6Ks3x_is"},"source":["**Calling a function**\n","\n","A function line will not be executed until we call it by writing the name of the function. We need to also write the values of the input to the function. \n","\n","The arguments need to be keyed in order of the parameters, or the values will be switched. You can avoid this by calling the name of the parameter followed by `=` and the value assigned."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s20nt8S4x_Nc","executionInfo":{"status":"ok","timestamp":1640093293910,"user_tz":-480,"elapsed":331,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"a3ae7290-40ca-4012-a60c-1c1cfe105e5e"},"source":["def divisibility(x,y):\n","  if x % y == 0: #if x is divisibly by y\n","    return print(x,\"is divisible by\",y)\n","  else:\n","    return print(x,\"is NOT divisible by\",y)\n","\n","divisibility(431,43)\n","\n","divisibility(y=4,x=24)"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["431 is NOT divisible by 43\n","24 is divisible by 4\n"]}]},{"cell_type":"markdown","metadata":{"id":"diEVBJfd29tL"},"source":["**Setting default values of parameters**\n","\n","A function requires the same number of arguments for the inputs when calling it. Otherwise it will give an error. Sometimes we want to avoid this error, by defaulting the values of the parameters. We use the `=` sign to equate the default values of the arguments."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rac6t4Ex4KkK","executionInfo":{"status":"ok","timestamp":1640093496812,"user_tz":-480,"elapsed":318,"user":{"displayName":"Ayyash Ahmad","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgJXwgr7x7IEXfbdT-OxAUW47WAGbdjCkH2L-Zqsw=s64","userId":"17632978179708866392"}},"outputId":"b5f07d11-2f93-4fc6-8b4b-2f20488e2b4b"},"source":["import numpy as np\n","\n","def distance(x=1,y=1,z=1):\n","  return np.sqrt(x**2+y**2+z**2) #formula to find distance from origin\n","\n","print(distance(0,2)) #we only define values of x and y. so z will have a default value of 1\n","print(distance())"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["2.23606797749979\n","1.7320508075688772\n"]}]},{"cell_type":"markdown","metadata":{"id":"rS9Olp_71Vxj"},"source":["Read more: [Functions](https://www.w3schools.com/python/python_functions.asp)"]}]}